spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${aws.db.username}
    password: ${aws.db.password}
    url: ${aws.db.url}
  output:
    ansi:
      enabled: always
#  batch:
#    jdbc:
#      initialize-schema: always
#    job:
#      names: myJob
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        show_sql: true
        format_sql: true
        use_sql_comments: false
        hbm2ddl:
          auto: update
        default_batch_fetch_size: 1000

  logging:
    level:
      org:
        hibernate:
          type: trace
jwt:
  header: Authorization
  secret: secretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecretsecret
  authorities-key: authoritiesKey
  access-token-validity-in-seconds: 1210000000 # 30 m
  refresh-token-validity-in-seconds: 1210000000 # 14 d
#  1800000
#springdoc:
#  use-fqn: true
#
#cloud:
#  aws:
#    s3:
#      bucket: field-mate
#      folder: dtbb
#    region:
#      static: ap-northeast-2
#    stack:
#      auto: false
#    credentials:
#      accessKey: ${aws.access.key.id}
#      secretKey: ${aws.secret.access.key}
#    cloudFront:
#      distributionDomain: https://d3j1uqx77q4q2.cloudfront.net
#
#cors:
#  allowed-origins: 'http://localhost:3000,https://localhost:3000'
#  allowed-methods: GET,POST,PUT,PATCH,DELETE,OPTIONS
#  allowed-headers: '*'
#  max-age: 3600

naver-sms:
    accessKey: ${naver.sms.accesskey}
    secretKey: ${naver.sms.secret}
    serviceId: ${naver.sms.serviceid}
    senderPhone: ${naver.sms.phone}